{"ast":null,"code":"var _jsxFileName = \"/home/josewald/myapp/src/component/MemeGenerator.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\n    const randomMemeImg = this.state.allMemeImgs[randNum].url;\n    this.setState({\n      randomImg: randomMemeImg\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme_form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          value: this.state.topText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"bottomText\",\n          value: this.state.bottomTextText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Gen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.randomImg,\n          alt: \"template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.state.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this);\n  }\n}\nexport default MemeGenerator;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","componentDidMount","fetch","then","response","json","memes","data","setState","event","name","value","target","preventDefault","randNum","Math","floor","random","length","randomMemeImg","url","render","children","className","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","bottomTextText","src","alt"],"sources":["/home/josewald/myapp/src/component/MemeGenerator.js"],"sourcesContent":["import React  , {Component} from \"react\";\n\nclass MemeGenerator extends Component{\n    constructor(){\n        super()\n            this.state={\n                topText:\"\",\n                bottomText:\"\",\n                randomImg:\"http://i.imgflip.com/1bij.jpg\",\n                allMemeImgs:[]\n            }\n            this.handleChange=this.handleChange.bind(this)\n            this.handleSubmit=this.handleSubmit.bind(this)\n    }\n   \n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response=>response.json())\n\n            .then(response=>{\n                const {memes}=response.data\n                this.setState({allMemeImgs:memes})\n            })\n    }\n\n    handleChange(event){\n        const {name,value}=event.target\n        this.setState({\n            [name]:value\n        })\n    }\n\n    handleSubmit(event){\n        event.preventDefault()\n        const randNum=Math.floor(Math.random()*this.state.allMemeImgs.length)\n        const randomMemeImg=this.state.allMemeImgs[randNum].url\n        this.setState({randomImg:randomMemeImg})\n    }\n\n    render(){\n        return(\n             <div>\n                <form className=\"meme_form\" onSubmit={this.handleSubmit}> \n                        <input type=\"text\" name=\"topText\"value={this.state.topText} onChange={this.handleChange}></input>\n                        <input type=\"text\" name=\"bottomText\"value={this.state.bottomTextText} onChange={this.handleChange}></input>\n                        <button>Gen</button>\n                </form>\n                <div className=\"meme\">\n                        <img src={this.state.randomImg} alt=\"template\"/>\n                        <h1>{this.state.topText}</h1>\n                        <h2>{this.state.bottomText}</h2>\n                </div>\n             </div>\n        )\n    }\n}\n\nexport default MemeGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}