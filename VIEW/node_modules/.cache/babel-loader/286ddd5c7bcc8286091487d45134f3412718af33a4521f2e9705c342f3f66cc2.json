{"ast":null,"code":"var _jsxFileName = \"/home/josewald/myapp/src/App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      a: \"\",\n      b: \"\",\n      operator: \"\"\n    };\n  }\n  calculate(event) {}\n  render() {\n    const button = [];\n    const buttonStyle = {\n      width: \"50px\",\n      height: \"50px\"\n    };\n    for (let i = 0; i <= 9; i++) {\n      button.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        children: [\" \", i, \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this));\n    }\n    const rows = [];\n    for (let i = 0; i < button.length; i += 3) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: button.slice(i, i + 3)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"displayScreen\",\n        style: {\n          height: \"50px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 89\n      }, this), rows, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;\n/*class App extends Component{\n  constructor(){\n      super()\n      this.state={\n          count:0\n      }\n      this.change=this.change.bind(this)\n  }\n\n  change() {\n      this.setState(prevState =>{\n        return{\n            count: prevState.count + 1\n        }\n        })\n  }\n\n  render(){\n      return(\n          <div>\n              <h1>{this.state.count}</h1>\n              <button onClick={this.change}>change</button>\n          </div>\n      )\n  }\n}*/\n\n/*\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoaded:false\n        }\n    }\n    componentDidMount(){\n        setTimeout(()=>{\n            this.setState({\n                    isLoaded:true\n            })\n        },1500)\n    }\n\n    render(){\n        return(\n            <div>\n                      <Conditionnnal isLoaded={this.state.isLoaded}/>\n            </div>      \n        )\n    }\n}*/\n/*\nFetching a data from a DB\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoading:true,\n            character:{}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoading:true})\n        fetch(\"link to the database\")\n            .then(response=>response.json())//On doit le convertir en JSON\n            .then(data=>{\n                this.setState({\n                    isLoading:false,\n                    character:data\n                })\n            })\n    }\n\n    render(){\n        let text=this.state.isLoading==true ?\"Loading...\" :this.state.character.name\n        return(\n            <div>Code goes here{text}</div>\n        )\n    }\n}\n*/\n/*class App extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            firstName:\"\",\n            lastName:\"\"\n        }\n        this.handleChange=this.handleChange.bind(this)\n    }\n\n    componentDidMount(){\n \n    }\n\n    handleChange(event){\n        //this.setState({firstName:event.target.value})\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n        \n    }\n\n    render(){\n    \n        return(\n            <form>\n                <input type=\"text\" name=\"firstName\" value={this.state.firstName} placeholder=\"First Name\" onChange={this.handleChange}></input>\n                <input type=\"text\" name=\"lastName\" value={this.state.lastName} placeholder=\"Last Name\" onChange={this.handleChange}></input>\n                <h1>{this.state.firstName} {this.state.lastName}</h1>\n            </form>\n        )\n    }\n}*/","map":{"version":3,"names":["React","Component","ReactDOM","jsxDEV","_jsxDEV","App","constructor","state","a","b","operator","calculate","event","render","button","buttonStyle","width","height","i","push","style","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","length","slice","type","name"],"sources":["/home/josewald/myapp/src/App.js"],"sourcesContent":["import React , {Component} from \"react\";\nimport ReactDOM from 'react-dom'\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            a:\"\",b:\"\",operator:\"\"\n        }\n    }\n\n    calculate(event) {\n        \n    }\n\n    render(){\n        const button=[]\n        const buttonStyle={\n            width:\"50px\",\n            height:\"50px\"\n        }\n        for(let i=0 ; i<=9 ; i++){\n            button.push(<button key={i}style={buttonStyle}> {i} </button>)\n        }\n\n        const rows=[]\n        for(let i=0 ; i<button.length;i+=3){\n            rows.push(\n                <div key={i} >\n                    {button.slice(i,i+3)}\n                </div>\n            )\n        }\n        return(\n            <div>\n                <input type=\"text\" name=\"displayScreen\" style={{height:\"50px\"}}></input><br/>\n               {rows}\n               <br/>\n               <button style={buttonStyle}>+</button> \n               <button style={buttonStyle}>-</button> \n               <button style={buttonStyle}>*</button> \n               <button style={buttonStyle}>/</button> \n            </div>\n        )\n    }\n}\nexport default App\n/*class App extends Component{\n  constructor(){\n      super()\n      this.state={\n          count:0\n      }\n      this.change=this.change.bind(this)\n  }\n\n  change() {\n      this.setState(prevState =>{\n        return{\n            count: prevState.count + 1\n        }\n        })\n  }\n\n  render(){\n      return(\n          <div>\n              <h1>{this.state.count}</h1>\n              <button onClick={this.change}>change</button>\n          </div>\n      )\n  }\n}*/\n\n/*\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoaded:false\n        }\n    }\n    componentDidMount(){\n        setTimeout(()=>{\n            this.setState({\n                    isLoaded:true\n            })\n        },1500)\n    }\n\n    render(){\n        return(\n            <div>\n                      <Conditionnnal isLoaded={this.state.isLoaded}/>\n            </div>      \n        )\n    }\n}*/\n/*\nFetching a data from a DB\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoading:true,\n            character:{}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoading:true})\n        fetch(\"link to the database\")\n            .then(response=>response.json())//On doit le convertir en JSON\n            .then(data=>{\n                this.setState({\n                    isLoading:false,\n                    character:data\n                })\n            })\n    }\n\n    render(){\n        let text=this.state.isLoading==true ?\"Loading...\" :this.state.character.name\n        return(\n            <div>Code goes here{text}</div>\n        )\n    }\n}\n*/\n/*class App extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            firstName:\"\",\n            lastName:\"\"\n        }\n        this.handleChange=this.handleChange.bind(this)\n    }\n\n    componentDidMount(){\n \n    }\n\n    handleChange(event){\n        //this.setState({firstName:event.target.value})\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n        \n    }\n\n    render(){\n    \n        return(\n            <form>\n                <input type=\"text\" name=\"firstName\" value={this.state.firstName} placeholder=\"First Name\" onChange={this.handleChange}></input>\n                <input type=\"text\" name=\"lastName\" value={this.state.lastName} placeholder=\"Last Name\" onChange={this.handleChange}></input>\n                <h1>{this.state.firstName} {this.state.lastName}</h1>\n            </form>\n        )\n    }\n}*/\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAChC,MAAMC,GAAG,SAASJ,SAAS;EACvBK,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAC;MACPC,CAAC,EAAC,EAAE;MAACC,CAAC,EAAC,EAAE;MAACC,QAAQ,EAAC;IACvB,CAAC;EACL;EAEAC,SAASA,CAACC,KAAK,EAAE,CAEjB;EAEAC,MAAMA,CAAA,EAAE;IACJ,MAAMC,MAAM,GAAC,EAAE;IACf,MAAMC,WAAW,GAAC;MACdC,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC;IACX,CAAC;IACD,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAGA,CAAC,IAAE,CAAC,EAAGA,CAAC,EAAE,EAAC;MACrBJ,MAAM,CAACK,IAAI,eAACf,OAAA;QAAegB,KAAK,EAAEL,WAAY;QAAAM,QAAA,GAAC,GAAC,EAACH,CAAC,EAAC,GAAC;MAAA,GAA3BA,CAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC,CAAC;IAClE;IAEA,MAAMC,IAAI,GAAC,EAAE;IACb,KAAI,IAAIR,CAAC,GAAC,CAAC,EAAGA,CAAC,GAACJ,MAAM,CAACa,MAAM,EAACT,CAAC,IAAE,CAAC,EAAC;MAC/BQ,IAAI,CAACP,IAAI,eACLf,OAAA;QAAAiB,QAAA,EACKP,MAAM,CAACc,KAAK,CAACV,CAAC,EAACA,CAAC,GAAC,CAAC;MAAC,GADdA,CAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACT,CAAC;IACL;IACA,oBACIrB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,eAAe;QAACV,KAAK,EAAE;UAACH,MAAM,EAAC;QAAM;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAArB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7EC,IAAI,eACLtB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLrB,OAAA;QAAQgB,KAAK,EAAEL,WAAY;QAAAM,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCrB,OAAA;QAAQgB,KAAK,EAAEL,WAAY;QAAAM,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCrB,OAAA;QAAQgB,KAAK,EAAEL,WAAY;QAAAM,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCrB,OAAA;QAAQgB,KAAK,EAAEL,WAAY;QAAAM,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAEd;AACJ;AACA,eAAepB,GAAG;AAClignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}