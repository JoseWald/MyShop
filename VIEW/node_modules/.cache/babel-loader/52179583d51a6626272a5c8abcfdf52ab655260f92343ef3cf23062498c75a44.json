{"ast":null,"code":"var _jsxFileName = \"/home/josewald/myapp/src/component/MemeGenerator.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme_form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          value: this.state.topText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"bottomText\",\n          value: this.state.bottomTextText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Gen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this);\n  }\n}\nexport default MemeGenerator;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","componentDidMount","fetch","then","response","json","memes","data","setState","event","name","value","target","render","children","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","bottomTextText"],"sources":["/home/josewald/myapp/src/component/MemeGenerator.js"],"sourcesContent":["import React  , {Component} from \"react\";\n\nclass MemeGenerator extends Component{\n    constructor(){\n        super()\n            this.state={\n                topText:\"\",\n                bottomText:\"\",\n                randomImg:\"http://i.imgflip.com/1bij.jpg\",\n                allMemeImgs:[]\n            }\n            this.handleChange=this.handleChange.bind(this)\n    }\n   \n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response=>response.json())\n\n            .then(response=>{\n                const {memes}=response.data\n                this.setState({allMemeImgs:memes})\n            })\n    }\n\n    handleChange(event){\n        const {name,value}=event.target\n        this.setState({\n            [name]:value\n        })\n    }\n    render(){\n        return(\n             <div>\n                <form className=\"meme_form\"> \n                        <input type=\"text\" name=\"topText\"value={this.state.topText} onChange={this.handleChange}></input>\n                        <input type=\"text\" name=\"bottomText\"value={this.state.bottomTextText} onChange={this.handleChange}></input>\n                        <button>Gen</button>\n                </form>\n             </div>\n        )\n    }\n}\n\nexport default MemeGenerator;"],"mappings":";AAAA,OAAOA,KAAK,IAAKC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,aAAa,SAASH,SAAS;EACjCI,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;IACH,IAAI,CAACC,KAAK,GAAC;MACPC,OAAO,EAAC,EAAE;MACVC,UAAU,EAAC,EAAE;MACbC,SAAS,EAAC,+BAA+B;MACzCC,WAAW,EAAC;IAChB,CAAC;IACD,IAAI,CAACC,YAAY,GAAC,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EACtD;EAEAC,iBAAiBA,CAAA,EAAE;IACfC,KAAK,CAAC,mCAAmC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAE/BF,IAAI,CAACC,QAAQ,IAAE;MACZ,MAAM;QAACE;MAAK,CAAC,GAACF,QAAQ,CAACG,IAAI;MAC3B,IAAI,CAACC,QAAQ,CAAC;QAACV,WAAW,EAACQ;MAAK,CAAC,CAAC;IACtC,CAAC,CAAC;EACV;EAEAP,YAAYA,CAACU,KAAK,EAAC;IACf,MAAM;MAACC,IAAI;MAACC;IAAK,CAAC,GAACF,KAAK,CAACG,MAAM;IAC/B,IAAI,CAACJ,QAAQ,CAAC;MACV,CAACE,IAAI,GAAEC;IACX,CAAC,CAAC;EACN;EACAE,MAAMA,CAAA,EAAE;IACJ,oBACKtB,OAAA;MAAAuB,QAAA,eACGvB,OAAA;QAAMwB,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACnBvB,OAAA;UAAOyB,IAAI,EAAC,MAAM;UAACN,IAAI,EAAC,SAAS;UAAAC,KAAK,EAAE,IAAI,CAACjB,KAAK,CAACC,OAAQ;UAACsB,QAAQ,EAAE,IAAI,CAAClB;QAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjG9B,OAAA;UAAOyB,IAAI,EAAC,MAAM;UAACN,IAAI,EAAC,YAAY;UAAAC,KAAK,EAAE,IAAI,CAACjB,KAAK,CAAC4B,cAAe;UAACL,QAAQ,EAAE,IAAI,CAAClB;QAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3G9B,OAAA;UAAAuB,QAAA,EAAQ;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEf;AACJ;AAEA,eAAe7B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}