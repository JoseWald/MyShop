{"ast":null,"code":"var _jsxFileName = \"/home/josewald/myapp/src/App.js\";\nimport React, { Component } from \"react\";\nimport Conditionnnal from \"./component/Conditionnal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      character: {}\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(\"link to the database\").then(response => response.json()) //On doit le convertir en JSON\n    .then(data => {\n      this.setState({\n        character: data\n      });\n    });\n  }\n  render() {\n    let text = this.state.isLoading == true ? \"Loading\" : this.state.character.name;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Code goes here\", text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;\n/*class App extends Component{\n  constructor(){\n      super()\n      this.state={\n          count:0\n      }\n      this.change=this.change.bind(this)\n  }\n\n  change() {\n      this.setState(prevState =>{\n        return{\n            count: prevState.count + 1\n        }\n        })\n  }\n\n  render(){\n      return(\n          <div>\n              <h1>{this.state.count}</h1>\n              <button onClick={this.change}>change</button>\n          </div>\n      )\n  }\n}*/\n\n/*\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoaded:false\n        }\n    }\n    componentDidMount(){\n        setTimeout(()=>{\n            this.setState({\n                    isLoaded:true\n            })\n        },1500)\n    }\n\n    render(){\n        return(\n            <div>\n                      <Conditionnnal isLoaded={this.state.isLoaded}/>\n            </div>      \n        )\n    }\n}*/","map":{"version":3,"names":["React","Component","Conditionnnal","jsxDEV","_jsxDEV","App","constructor","state","isLoading","character","componentDidMount","setState","fetch","then","response","json","data","render","text","name","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/josewald/myapp/src/App.js"],"sourcesContent":["import React , {Component} from \"react\";\nimport Conditionnnal  from \"./component/Conditionnal\";\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoading:true,\n            character:{}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoading:true})\n        fetch(\"link to the database\")\n            .then(response=>response.json())//On doit le convertir en JSON\n            .then(data=>{\n                this.setState({\n                    character:data\n                })\n            })\n    }\n\n    render(){\n        let text=this.state.isLoading==true ?\"Loading\" :this.state.character.name\n        return(\n            <div>Code goes here{text}</div>\n        )\n    }\n}\n\nexport default App\n/*class App extends Component{\n  constructor(){\n      super()\n      this.state={\n          count:0\n      }\n      this.change=this.change.bind(this)\n  }\n\n  change() {\n      this.setState(prevState =>{\n        return{\n            count: prevState.count + 1\n        }\n        })\n  }\n\n  render(){\n      return(\n          <div>\n              <h1>{this.state.count}</h1>\n              <button onClick={this.change}>change</button>\n          </div>\n      )\n  }\n}*/\n\n/*\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoaded:false\n        }\n    }\n    componentDidMount(){\n        setTimeout(()=>{\n            this.setState({\n                    isLoaded:true\n            })\n        },1500)\n    }\n\n    render(){\n        return(\n            <div>\n                      <Conditionnnal isLoaded={this.state.isLoaded}/>\n            </div>      \n        )\n    }\n}*/\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AACvC,OAAOC,aAAa,MAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,GAAG,SAASJ,SAAS;EACvBK,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAC;MACPC,SAAS,EAAC,IAAI;MACdC,SAAS,EAAC,CAAC;IACf,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAE;IACf,IAAI,CAACC,QAAQ,CAAC;MAACH,SAAS,EAAC;IAAI,CAAC,CAAC;IAC/BI,KAAK,CAAC,sBAAsB,CAAC,CACxBC,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAAA,CAC/BF,IAAI,CAACG,IAAI,IAAE;MACR,IAAI,CAACL,QAAQ,CAAC;QACVF,SAAS,EAACO;MACd,CAAC,CAAC;IACN,CAAC,CAAC;EACV;EAEAC,MAAMA,CAAA,EAAE;IACJ,IAAIC,IAAI,GAAC,IAAI,CAACX,KAAK,CAACC,SAAS,IAAE,IAAI,GAAE,SAAS,GAAE,IAAI,CAACD,KAAK,CAACE,SAAS,CAACU,IAAI;IACzE,oBACIf,OAAA;MAAAgB,QAAA,GAAK,gBAAc,EAACF,IAAI;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAEvC;AACJ;AAEA,eAAenB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}