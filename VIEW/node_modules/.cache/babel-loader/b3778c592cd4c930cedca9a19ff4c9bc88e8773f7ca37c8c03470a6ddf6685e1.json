{"ast":null,"code":"var _jsxFileName = \"/home/josewald/myapp/src/App.js\";\nimport React, { Component } from \"react\";\nimport Conditionnnal from \"./component/Conditionnal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {}\n  handleChange(event) {\n    //this.setState({firstName:event.target.value})\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: this.state.firstName,\n        placeholder: \"First Name\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: this.state.firstName,\n        placeholder: \"Last Name\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [this.state.firstName, \" \", this.state.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;\n/*class App extends Component{\n  constructor(){\n      super()\n      this.state={\n          count:0\n      }\n      this.change=this.change.bind(this)\n  }\n\n  change() {\n      this.setState(prevState =>{\n        return{\n            count: prevState.count + 1\n        }\n        })\n  }\n\n  render(){\n      return(\n          <div>\n              <h1>{this.state.count}</h1>\n              <button onClick={this.change}>change</button>\n          </div>\n      )\n  }\n}*/\n\n/*\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoaded:false\n        }\n    }\n    componentDidMount(){\n        setTimeout(()=>{\n            this.setState({\n                    isLoaded:true\n            })\n        },1500)\n    }\n\n    render(){\n        return(\n            <div>\n                      <Conditionnnal isLoaded={this.state.isLoaded}/>\n            </div>      \n        )\n    }\n}*/\n/*\nFetching a data from a DB\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoading:true,\n            character:{}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoading:true})\n        fetch(\"link to the database\")\n            .then(response=>response.json())//On doit le convertir en JSON\n            .then(data=>{\n                this.setState({\n                    isLoading:false,\n                    character:data\n                })\n            })\n    }\n\n    render(){\n        let text=this.state.isLoading==true ?\"Loading...\" :this.state.character.name\n        return(\n            <div>Code goes here{text}</div>\n        )\n    }\n}\n*/","map":{"version":3,"names":["React","Component","Conditionnnal","jsxDEV","_jsxDEV","App","constructor","props","state","firstName","lastName","handleChange","bind","componentDidMount","event","setState","target","name","value","render","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/josewald/myapp/src/App.js"],"sourcesContent":["import React , {Component} from \"react\";\nimport Conditionnnal  from \"./component/Conditionnal\";\n\nclass App extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            firstName:\"\",\n            lastName:\"\"\n        }\n        this.handleChange=this.handleChange.bind(this)\n    }\n\n    componentDidMount(){\n \n    }\n\n    handleChange(event){\n        //this.setState({firstName:event.target.value})\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n        \n    }\n\n    render(){\n    \n        return(\n            <form>\n                <input type=\"text\" name=\"firstName\" value={this.state.firstName} placeholder=\"First Name\" onChange={this.handleChange}></input>\n                <input type=\"text\" name=\"lastName\" value={this.state.firstName} placeholder=\"Last Name\" onChange={this.handleChange}></input>\n                <h1>{this.state.firstName} {this.state.lastName}</h1>\n            </form>\n        )\n    }\n}\n\nexport default App\n/*class App extends Component{\n  constructor(){\n      super()\n      this.state={\n          count:0\n      }\n      this.change=this.change.bind(this)\n  }\n\n  change() {\n      this.setState(prevState =>{\n        return{\n            count: prevState.count + 1\n        }\n        })\n  }\n\n  render(){\n      return(\n          <div>\n              <h1>{this.state.count}</h1>\n              <button onClick={this.change}>change</button>\n          </div>\n      )\n  }\n}*/\n\n/*\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoaded:false\n        }\n    }\n    componentDidMount(){\n        setTimeout(()=>{\n            this.setState({\n                    isLoaded:true\n            })\n        },1500)\n    }\n\n    render(){\n        return(\n            <div>\n                      <Conditionnnal isLoaded={this.state.isLoaded}/>\n            </div>      \n        )\n    }\n}*/\n/*\nFetching a data from a DB\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoading:true,\n            character:{}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoading:true})\n        fetch(\"link to the database\")\n            .then(response=>response.json())//On doit le convertir en JSON\n            .then(data=>{\n                this.setState({\n                    isLoading:false,\n                    character:data\n                })\n            })\n    }\n\n    render(){\n        let text=this.state.isLoading==true ?\"Loading...\" :this.state.character.name\n        return(\n            <div>Code goes here{text}</div>\n        )\n    }\n}\n*/"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AACvC,OAAOC,aAAa,MAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,GAAG,SAASJ,SAAS;EACvBK,WAAWA,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAC;MACPC,SAAS,EAAC,EAAE;MACZC,QAAQ,EAAC;IACb,CAAC;IACD,IAAI,CAACC,YAAY,GAAC,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAC,iBAAiBA,CAAA,EAAE,CAEnB;EAEAF,YAAYA,CAACG,KAAK,EAAC;IACf;IACA,IAAI,CAACC,QAAQ,CAAC;MACV,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAEH,KAAK,CAACE,MAAM,CAACE;IACrC,CAAC,CAAC;EAEN;EAEAC,MAAMA,CAAA,EAAE;IAEJ,oBACIf,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACJ,IAAI,EAAC,WAAW;QAACC,KAAK,EAAE,IAAI,CAACV,KAAK,CAACC,SAAU;QAACa,WAAW,EAAC,YAAY;QAACC,QAAQ,EAAE,IAAI,CAACZ;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/HvB,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACJ,IAAI,EAAC,UAAU;QAACC,KAAK,EAAE,IAAI,CAACV,KAAK,CAACC,SAAU;QAACa,WAAW,EAAC,WAAW;QAACC,QAAQ,EAAE,IAAI,CAACZ;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7HvB,OAAA;QAAAgB,QAAA,GAAK,IAAI,CAACZ,KAAK,CAACC,SAAS,EAAC,GAAC,EAAC,IAAI,CAACD,KAAK,CAACE,QAAQ;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAEf;AACJ;AAEA,eAAetB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}