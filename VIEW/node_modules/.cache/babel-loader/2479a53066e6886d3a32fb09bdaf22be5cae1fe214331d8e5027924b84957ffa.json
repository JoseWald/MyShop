{"ast":null,"code":"var _jsxFileName = \"/home/josewald/myapp/src/Calculator.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Calculator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      displaying: \"\",\n      operation: [],\n      result: 0\n    };\n    this.handleOperation = this.handleOperation.bind(this);\n    this.delete = this.delete.bind(this);\n  }\n  handleOperation(val) {\n    let tmpArray;\n    this.setState(prevState => {\n      tmpArray = [...prevState.operation, val];\n      return {\n        operation: tmpArray\n      };\n    }, () => {\n      this.setState({\n        displaying: this.state.operation.join('')\n      });\n    });\n  }\n  calculate() {\n    const op = this.state.operation;\n    let tmpresult;\n    let firstTime = true; //the first time tmpresult is assigned\n    let b0 = true;\n    let lastSliceInd = 0; //Next Index of the Operator\n    let prevOpInd = 0; //Previous Index of the Operator\n\n    //in the rule of the order of operation, we should calculate the  Multiplication and the division first\n    while (op.indexOf('*') != -1) {\n      let a;\n      let beg;\n      let end;\n      for (i = op.indexOf('*'); i < op.length; i++) {\n        if (isNaN(Number(op[i]))) {\n          a = op.slice(indexOf('*') + 1, i + 1);\n          end = i; //the end of the index of the current multiplication operation               \n          break;\n        }\n      }\n      for (i = op.indexOf('*'); i >= 0; i--) {\n        if (isNaN(Number(op[i]))) {\n          a *= op.slice(i, indexOf('*'));\n          beg = i; //the begining of the index of the current multiplication operation\n          tmpArray = [...this.state.operation];\n          tmpArray.splice(beg, end - beg + 1);\n          this.setState(prevState => {\n            return {\n              operation: tmpArray\n            };\n          });\n          break;\n        }\n      }\n    }\n    while (op.indexOf('/') != -1) {\n      let a;\n      let beg;\n      let end;\n      for (i = op.indexOf('/'); i < op.length; i++) {\n        if (isNaN(Number(op[i]))) {\n          a = op.slice(indexOf('*') + 1, i + 1);\n          end = i; //the end of the index of the current multiplication operation               \n          break;\n        }\n      }\n      for (i = op.indexOf('/'); i >= 0; i--) {\n        if (isNaN(Number(op[i]))) {\n          a *= op.slice(i, indexOf('*'));\n          beg = i; //the begining of the index of the current multiplication operation\n          tmpArray = [...this.state.operation];\n          tmpArray.splice(beg, end - beg + 1);\n          this.setState(prevState => {\n            return {\n              operation: tmpArray\n            };\n          });\n          break;\n        }\n      }\n    }\n    for (let i = 0; i < this.state.operation.length; i++) {\n      if ((i === op.length - 1 || op[i] === '+' || op[i] === '-' || op[i] === '*' || op[i] === '/') && firstTime) {\n        lastSliceInd = i + 1;\n        if (i !== op.length - 1) {\n          lastSliceInd = i;\n        }\n        tmpresult = Number(op.slice(0, lastSliceInd).join(''));\n        firstTime = false;\n        prevOpInd = i;\n      }\n      if (!firstTime && (op[i] === '+' || op[i] === '-' || op[i] === '*' || op[i] === '/') || i === op.length - 1) {\n        lastSliceInd = i + 1;\n        if (i !== op.length - 1) {\n          lastSliceInd = i;\n        }\n        console.log(\"a=\" + tmpresult);\n        switch (op[prevOpInd]) {\n          case '+':\n            {\n              tmpresult += Number(op.slice(prevOpInd + 1, lastSliceInd).join(''));\n              break;\n            }\n          case '-':\n            {\n              tmpresult -= Number(op.slice(prevOpInd + 1, lastSliceInd).join(''));\n              break;\n            }\n          case '*':\n            {\n              //at the first time b===0 and it may cause a bug to the division and multiplication\n              if (op[i] === '*' && b0 === true) {\n                b0 = false;\n                break;\n              }\n              tmpresult *= Number(op.slice(prevOpInd + 1, lastSliceInd).join(''));\n              break;\n            }\n          case '/':\n            {\n              //at the first time b===0 and it may cause a bug to the division and multiplication\n              if (op[i] === '/' && b0 === true) {\n                b0 = false;\n                break;\n              }\n              tmpresult /= Number(op.slice(prevOpInd + 1, lastSliceInd).join(''));\n              break;\n            }\n        }\n        console.log(\"b=\" + Number(op.slice(prevOpInd + 1, lastSliceInd).join('')));\n        prevOpInd = i;\n      }\n      //provide if there is an infinite value\n      if ((!isFinite(tmpresult) || isNaN(tmpresult)) && !firstTime) {\n        this.setState({\n          displaying: \"ERROR\"\n        });\n        console.log(tmpresult + \"tmp\");\n        break;\n      }\n      if (i === op.length - 1) {\n        this.setState({\n          displaying: \"=\" + tmpresult\n        });\n      }\n    }\n    console.log(tmpresult);\n  }\n  delete() {\n    let tmpArray = [...this.state.operation];\n    tmpArray.pop();\n    this.setState(prevState => {\n      return {\n        operation: tmpArray\n      };\n    }, () => {\n      this.setState({\n        displaying: this.state.operation.join('')\n      });\n    });\n  }\n  clear() {\n    this.setState({\n      operation: []\n    });\n    this.setState({\n      displaying: \"\"\n    });\n  }\n  render() {\n    const buttonStyle = {\n      width: \"50px\",\n      height: \"50px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          height: \"50px\",\n          width: \"200px\"\n        },\n        value: this.state.displaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: () => this.handleOperation(1),\n          children: \" 1 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: () => this.handleOperation(2),\n          children: \" 2 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: () => this.handleOperation(3),\n          children: \" 3 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: () => this.handleOperation(4),\n          children: \" 4 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: () => this.handleOperation(5),\n          children: \" 5 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: () => this.handleOperation(6),\n          children: \" 6 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: () => this.handleOperation(7),\n          children: \" 7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: () => this.handleOperation(8),\n          children: \" 8 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: () => this.handleOperation(9),\n          children: \" 9 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"150px\",\n          height: \"70px\"\n        },\n        onClick: () => this.handleOperation(0),\n        children: \" 0 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => this.handleOperation(\"+\"),\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => this.handleOperation(\"-\"),\n        children: \" - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => this.handleOperation(\"*\"),\n        children: \" * \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => this.handleOperation(\"/\"),\n        children: \" / \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => this.clear(),\n        children: \" C \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => this.delete(),\n        children: \" del \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"100px\",\n          height: \"50px\"\n        },\n        onClick: () => this.calculate(),\n        children: \" = \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Calculator;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Calculator","constructor","state","displaying","operation","result","handleOperation","bind","delete","val","tmpArray","setState","prevState","join","calculate","op","tmpresult","firstTime","b0","lastSliceInd","prevOpInd","indexOf","a","beg","end","i","length","isNaN","Number","slice","splice","console","log","isFinite","pop","clear","render","buttonStyle","width","height","children","type","style","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/josewald/myapp/src/Calculator.js"],"sourcesContent":["import React , {Component} from \"react\";\nclass Calculator extends Component{\n    constructor(){\n        super()\n        this.state={\n            displaying:\"\",\n            operation:[],\n            result:0\n        }\n        this.handleOperation=this.handleOperation.bind(this)\n        this.delete=this.delete.bind(this)\n    }\n\n    handleOperation(val){\n        let tmpArray\n        this.setState((prevState)=>{\n            tmpArray=[...prevState.operation,val]\n            return{\n                operation:tmpArray\n            }\n           \n        },()=>{\n            this.setState({displaying:this.state.operation.join('')})\n        })\n    }\n   \n    calculate() {\n        const op=this.state.operation\n        let tmpresult\n        let firstTime=true//the first time tmpresult is assigned\n        let b0=true\n        let lastSliceInd=0//Next Index of the Operator\n        let prevOpInd=0//Previous Index of the Operator\n\n        //in the rule of the order of operation, we should calculate the  Multiplication and the division first\n        while(op.indexOf('*')!=-1){\n            let a \n            let beg \n            let end\n            for(i=op.indexOf('*');i<op.length;i++){\n                if(isNaN(Number(op[i]))){\n                    a=op.slice(indexOf('*')+1,i+1)\n                    end=i//the end of the index of the current multiplication operation               \n                    break\n                }\n            }\n            for(i=op.indexOf('*');i>=0;i--){\n                    if(isNaN(Number(op[i]))){                     \n                        a*=op.slice(i,indexOf('*'))\n                        beg=i//the begining of the index of the current multiplication operation\n                        tmpArray=[...this.state.operation]\n                        tmpArray.splice(beg,end-beg+1)\n                        this.setState((prevState)=>{\n                            return{\n                                operation:tmpArray  \n                            }\n                        })\n                        break\n                    }\n            }\n          \n\n        }\n        while(op.indexOf('/')!=-1){\n            let a \n            let beg \n            let end\n            for(i=op.indexOf('/');i<op.length;i++){\n                if(isNaN(Number(op[i]))){\n                    a=op.slice(indexOf('*')+1,i+1)\n                    end=i//the end of the index of the current multiplication operation               \n                    break\n                }\n            }\n            for(i=op.indexOf('/');i>=0;i--){\n                    if(isNaN(Number(op[i]))){                     \n                        a*=op.slice(i,indexOf('*'))\n                        beg=i//the begining of the index of the current multiplication operation\n                        tmpArray=[...this.state.operation]\n                        tmpArray.splice(beg,end-beg+1)\n                        this.setState((prevState)=>{\n                            return{\n                                operation:tmpArray  \n                            }\n                        })\n                        break\n                    }\n            }\n          \n\n        }\n        for(let i=0;i<this.state.operation.length;i++){\n                if((i===op.length-1||op[i]==='+'||op[i]==='-'||op[i]==='*'||op[i]==='/') && firstTime){\n                        lastSliceInd=i+1\n                        if(i!==op.length-1){\n                            lastSliceInd=i\n                        }\n                        tmpresult=Number(op.slice(0,lastSliceInd).join(''))\n                        firstTime=false\n                        prevOpInd=i\n                }\n                if((!firstTime && (op[i]==='+'||op[i]==='-'||op[i]==='*'|| op[i]==='/'))||i===op.length-1)  {\n                    lastSliceInd=i+1\n                    if(i!==op.length-1){\n                        lastSliceInd=i\n                    }\n                  \n                    console.log(\"a=\"+tmpresult)  \n                    switch(op[prevOpInd]){\n                        case '+':{\n                            tmpresult+=Number(op.slice(prevOpInd+1,lastSliceInd).join(''))\n                            break\n                        }\n\n                        case '-':{\n                            tmpresult-=Number(op.slice(prevOpInd+1,lastSliceInd).join(''))\n                            break\n                        }\n\n                        case '*':{\n                            //at the first time b===0 and it may cause a bug to the division and multiplication\n                            if(op[i]==='*' && b0===true){\n                                b0=false\n                                break\n                            }\n                            tmpresult*=Number(op.slice(prevOpInd+1,lastSliceInd).join(''))\n                            break\n                        }\n\n                        case '/':{\n                              //at the first time b===0 and it may cause a bug to the division and multiplication\n                              if(op[i]==='/' && b0===true){\n                                b0=false\n                                break\n                              }\n                            \n                            tmpresult/=Number(op.slice(prevOpInd+1,lastSliceInd).join(''))\n                            break\n                        }\n                    \n                      \n                    }\n                 \n                    console.log(\"b=\"+Number(op.slice(prevOpInd+1,lastSliceInd).join('')))           \n                    prevOpInd=i\n                }\n                //provide if there is an infinite value\n                if((!isFinite(tmpresult)||isNaN(tmpresult)) && !firstTime){\n                    this.setState({displaying:\"ERROR\"})\n                    console.log(tmpresult+\"tmp\")\n                    break\n                }\n                if(i===op.length-1){\n                    this.setState({displaying:\"=\"+tmpresult})\n                }\n           \n        }\n        console.log(tmpresult)\n     \n          \n     \n    }\n\n    delete(){\n        let tmpArray=[...this.state.operation]\n        tmpArray.pop()\n        this.setState((prevState)=>{\n            return{\n                operation:tmpArray\n            }\n           \n        },()=>{\n            this.setState({displaying:this.state.operation.join('')})\n        })\n    }\n    clear(){\n        this.setState({operation:[]})\n        this.setState({displaying:\"\"})\n    }\n\n    render(){\n        const buttonStyle={\n            width:\"50px\",\n            height:\"50px\"\n        }\n        return(\n            <div>\n                <input \n                        type=\"text\" \n                       style={{height:\"50px\",width:\"200px\"}} \n                       value={this.state.displaying} \n                >\n                </input>\n                <br/>\n               \n               <div>\n                    <button style={buttonStyle} onClick={()=>this.handleOperation(1)}> 1 </button>\n                    <button style={buttonStyle} onClick={()=>this.handleOperation(2)}> 2 </button>\n                    <button style={buttonStyle} onClick={()=>this.handleOperation(3)}> 3 </button>\n              </div>\n               <div>\n                    <button style={buttonStyle} onClick={()=>this.handleOperation(4)}> 4 </button>\n                    <button style={buttonStyle} onClick={()=>this.handleOperation(5)}> 5 </button>\n                    <button style={buttonStyle} onClick={()=>this.handleOperation(6)}> 6 </button>\n               </div>\n               <div>\n                    <button style={buttonStyle} onClick={()=>this.handleOperation(7)}> 7 </button>\n                    <button style={buttonStyle} onClick={()=>this.handleOperation(8)}> 8 </button>\n                    <button style={buttonStyle} onClick={()=>this.handleOperation(9)}> 9 </button>\n               </div>\n                    <button style={{width:\"150px\",height:\"70px\"}} onClick={()=>this.handleOperation(0)}> 0 </button>\n               <br/>\n               <button style={buttonStyle} onClick={()=>this.handleOperation(\"+\")} > + </button> \n               <button style={buttonStyle} onClick={()=>this.handleOperation(\"-\")} > - </button> \n               <button style={buttonStyle} onClick={()=>this.handleOperation(\"*\")} > * </button> \n               <button style={buttonStyle} onClick={()=>this.handleOperation(\"/\")} > / </button> \n               <br/>\n               \n               <button style={buttonStyle} onClick={()=>this.clear()}> C </button>\n               <button style={buttonStyle} onClick={()=>this.delete()} > del </button>\n               <button style={{width:\"100px\",height:\"50px\"}} onClick={()=>this.calculate()} > = </button>\n            </div>\n        )\n    }\n}\nexport default Calculator"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}