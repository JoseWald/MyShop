{"ast":null,"code":"var _jsxFileName = \"/home/josewald/myapp/src/App.js\";\nimport React, { Component } from \"react\";\n//import Conditionnnal  from \"./component/Conditionnal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"p\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\n/*class App extends Component{\n  constructor(){\n      super()\n      this.state={\n          count:0\n      }\n      this.change=this.change.bind(this)\n  }\n\n  change() {\n      this.setState(prevState =>{\n        return{\n            count: prevState.count + 1\n        }\n        })\n  }\n\n  render(){\n      return(\n          <div>\n              <h1>{this.state.count}</h1>\n              <button onClick={this.change}>change</button>\n          </div>\n      )\n  }\n}*/\n\n/*\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoaded:false\n        }\n    }\n    componentDidMount(){\n        setTimeout(()=>{\n            this.setState({\n                    isLoaded:true\n            })\n        },1500)\n    }\n\n    render(){\n        return(\n            <div>\n                      <Conditionnnal isLoaded={this.state.isLoaded}/>\n            </div>      \n        )\n    }\n}*/\n/*\nFetching a data from a DB\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoading:true,\n            character:{}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoading:true})\n        fetch(\"link to the database\")\n            .then(response=>response.json())//On doit le convertir en JSON\n            .then(data=>{\n                this.setState({\n                    isLoading:false,\n                    character:data\n                })\n            })\n    }\n\n    render(){\n        let text=this.state.isLoading==true ?\"Loading...\" :this.state.character.name\n        return(\n            <div>Code goes here{text}</div>\n        )\n    }\n}\n*/\n/*class App extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            firstName:\"\",\n            lastName:\"\"\n        }\n        this.handleChange=this.handleChange.bind(this)\n    }\n\n    componentDidMount(){\n \n    }\n\n    handleChange(event){\n        //this.setState({firstName:event.target.value})\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n        \n    }\n\n    render(){\n    \n        return(\n            <form>\n                <input type=\"text\" name=\"firstName\" value={this.state.firstName} placeholder=\"First Name\" onChange={this.handleChange}></input>\n                <input type=\"text\" name=\"lastName\" value={this.state.lastName} placeholder=\"Last Name\" onChange={this.handleChange}></input>\n                <h1>{this.state.firstName} {this.state.lastName}</h1>\n            </form>\n        )\n    }\n}*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/josewald/myapp/src/App.js"],"sourcesContent":["import React , {Component} from \"react\";\n//import Conditionnnal  from \"./component/Conditionnal\";\nfunction App(){\n    return(\n        <h1>p</h1>\n    )\n}\nexport default App\n/*class App extends Component{\n  constructor(){\n      super()\n      this.state={\n          count:0\n      }\n      this.change=this.change.bind(this)\n  }\n\n  change() {\n      this.setState(prevState =>{\n        return{\n            count: prevState.count + 1\n        }\n        })\n  }\n\n  render(){\n      return(\n          <div>\n              <h1>{this.state.count}</h1>\n              <button onClick={this.change}>change</button>\n          </div>\n      )\n  }\n}*/\n\n/*\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoaded:false\n        }\n    }\n    componentDidMount(){\n        setTimeout(()=>{\n            this.setState({\n                    isLoaded:true\n            })\n        },1500)\n    }\n\n    render(){\n        return(\n            <div>\n                      <Conditionnnal isLoaded={this.state.isLoaded}/>\n            </div>      \n        )\n    }\n}*/\n/*\nFetching a data from a DB\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            isLoading:true,\n            character:{}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoading:true})\n        fetch(\"link to the database\")\n            .then(response=>response.json())//On doit le convertir en JSON\n            .then(data=>{\n                this.setState({\n                    isLoading:false,\n                    character:data\n                })\n            })\n    }\n\n    render(){\n        let text=this.state.isLoading==true ?\"Loading...\" :this.state.character.name\n        return(\n            <div>Code goes here{text}</div>\n        )\n    }\n}\n*/\n/*class App extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            firstName:\"\",\n            lastName:\"\"\n        }\n        this.handleChange=this.handleChange.bind(this)\n    }\n\n    componentDidMount(){\n \n    }\n\n    handleChange(event){\n        //this.setState({firstName:event.target.value})\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n        \n    }\n\n    render(){\n    \n        return(\n            <form>\n                <input type=\"text\" name=\"firstName\" value={this.state.firstName} placeholder=\"First Name\" onChange={this.handleChange}></input>\n                <input type=\"text\" name=\"lastName\" value={this.state.lastName} placeholder=\"Last Name\" onChange={this.handleChange}></input>\n                <h1>{this.state.firstName} {this.state.lastName}</h1>\n            </form>\n        )\n    }\n}*/\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAE;EACV,oBACID,OAAA;IAAAE,QAAA,EAAI;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAElB;AAACC,EAAA,GAJQN,GAAG;AAKZ,eAAeA,GAAG;AAClhCA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}